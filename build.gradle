/*
 * Copyright (C) 2017 BROADSoftware
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


apply plugin: 'java'
apply plugin: 'eclipse'


defaultTasks 'uberJar'


repositories {
    jcenter()
}

// Refer to https://issues.gradle.org/browse/GRADLE-1010
eclipseJdt.doLast( {
	File f = file('.settings/org.eclipse.core.resources.prefs')
   	f.write('eclipse.preferences.version=1\n')
   	f.append('encoding/<project>=UTF-8')
	File f2 = file('.settings/org.eclipse.core.runtime.prefs')
   	f2.write('eclipse.preferences.version=1\n')
   	f2.append('line.separator=\\n')
})


configurations {
	compileAndJar
	compile.extendsFrom(compileAndJar)
}

dependencies {
	compile "org.slf4j:slf4j-api:$sl4jApiVersion"
	compile "org.slf4j:slf4j-log4j12:$sl4jLog4jVersion"
	compile "log4j:log4j:$log4jVersion"
    compileAndJar "org.apache.kafka:kafka-clients:$kafkaClientVersion"    
 	compileAndJar "net.sf.jopt-simple:jopt-simple:$joptVersion"
    compile "org.apache.hadoop:hadoop-common:$hadoopVersion"		
    compile "org.apache.hadoop:hadoop-hdfs:$hadoopVersion"		
    testCompile 'junit:junit:4.12'
    testCompile "org.apache.hadoop:hadoop-minicluster:$hadoopVersion"		
	testCompile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion"
	testCompile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    
}


test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}


jar {
	exclude("log4j.xml")
	rename("log4j-jar.xml", "log4j.xml")
}


//create a single Jar with all dependencies
task uberJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'hsync', 
        	'Implementation-Version': version,
        	'Main-Class': 'com.kappaware.hsync.Main'
    }
    baseName = project.name + "_uber"
    from { configurations.compileAndJar.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}



